version: '3.9'

services:
  web:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=123456
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      app-network:
        ipv4_address: 10.1.0.10

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: mydb
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      app-network:
        ipv4_address: 10.1.0.20

  redis:
    image: redis:7.4.1
    ports:
      - "6379:6379"
    networks:
      app-network:
        ipv4_address: 10.1.0.30

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - web
    networks:
      app-network:
        ipv4_address: 10.1.0.50

  python:
    build:
      context: ./pyscript
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=123456
      - DB_NAME=mydb
    networks:
      app-network:
        ipv4_address: 10.1.0.40

volumes:
  db_data:


networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/24
